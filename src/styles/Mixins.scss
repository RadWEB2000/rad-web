@import './Variables.scss';

@mixin animationView($animation, $type:"view"){
	animation: $animation linear forwards;
	@if $type == "view" {
		animation-timeline: view();
		animation-range: entry 0% cover 40%;
	} @else {
		animation-timeline: scroll(y);
		animation-range:entry 0 cover 6%;
	}
}

@mixin backgroundCover() {
	background-attachment: fixed;
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
}

@mixin headingHomePageGradient($gradient: null) {
	background-attachment: local;
	background-position: 0 0, 15px 15px;
	background-size: 30px 30px;
	@if $gradient == null {
		background-image: $headingHomePageGradient;
	} @else {
		background-image: $gradient;
	}
}

@mixin gradientTheme($gradient: null) {
	@include backgroundCover;
	@if $gradient == null {
		background-image: $homeGradient;
	} @else {
		background-image: $gradient;
	}
}

@mixin clearfix {
	&:after {
		content: '';
		display: table;
		clear: both;
	}
}

@mixin flex(
	$align,
	$justify,
	$flow: null,
	$columnGap: null,
	$rowGap: null,
	$shrink: false
) {
	align-items: $align;
	display: flex;
	justify-content: $justify;
	@if $columnGap != null {
		column-gap: $columnGap;
	}
	@if $flow != null {
		flex-flow: $flow;
	}
	@if $rowGap != null {
		row-gap: $rowGap;
	}
	@if $shrink != false {
		& > * {
			flex-shrink: 0;
		}
	}
}

@mixin font(
	$size,
	$weight: 400,
	$lineHeight: null,
	$textTransform: null,
	$letterSpacing: null,
	$align: null
) {
	font-size: $size;
	font-weight: $weight;
	@if $lineHeight != null {
		line-height: $lineHeight;
	}
	@if $textTransform != null {
		text-transform: $textTransform;
	}
	@if $letterSpacing != null {
		letter-spacing: $letterSpacing;
	}
	@if $align != null {
		text-align: $align;
	}
}

@mixin size($height: null, $width: null) {
	@if $height != null {
		height: $height;
	}
	@if $width != null {
		width: $width;
	}
}

@mixin grid(
	$area: null,
	$autoFlow: null,
	$columns: null,
	$rows: null,
	$columnGap: null,
	$rowGap: null
) {
	display: grid;

	@if $area != null {
		grid-template-areas: $area;
	}

	@if $autoFlow != null {
		grid-auto-flow: $autoFlow;
	}

	@if $columns != null {
		grid-template-columns: $columns;
	}

	@if $rows != null {
		grid-template-rows: $rows;
	}
	@if $columnGap != null {
		column-gap: $columnGap;
	}
	@if $rowGap != null {
		row-gap: $rowGap;
	}
}

@mixin gridSize($area: null, $columns: null, $rows: null) {
	@if $area != null {
		grid-area: $area;
	}

	@if $columns != null {
		grid-column: $columns;
	}

	@if $rows != null {
		grid-row: $rows;
	}
}

@mixin visibility($isPower: true) {
	@if $isPower == true {
		opacity: 1;
		visibility: visible;
	}
	@if $isPower == false {
		opacity: 0;
		visibility: hidden;
	}
}

@mixin animation(
	$name,
	$direction: null,
	$iteration: null,
	$duration: null,
	$playState: null,
	$rangeStart: null,
	$rangeEnd: null,
	$timing: null,
	$timeline: null,
	$composition: null
) {
	animation-name: $name;
	@if $composition != null {
		animation-composition: $composition;
	}

	@if $direction != null {
		animation-direction: $direction;
	}

	@if $duration != null {
		animation-duration: $duration;
	}
	@if $iteration != null {
		animation-iteration-count: $iteration;
	}

	@if $playState != null {
		animation-play-state: $playState;
	}

	@if $rangeStart != null {
		animation-range-start: $rangeStart;
	}

	@if $rangeEnd != null {
		animation-range-start: $rangeEnd;
	}

	@if $timeline != null {
		animation-timeline: $timeline;
	}

	@if $timing != null {
		animation-timing-function: $timing;
	}
}
